method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) ) + coord_flip() +
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals,
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals,
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 5, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 10, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
coiseekers <- seekers %>% filter(origin %in% coi2)
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanman" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
coiseekers2 <- seekers %>% filter(origin %in% coi2)
ggparallel::ggparallel(data =  coiseekers2 %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
coiseekers2
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanman" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekers2 %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 2, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 5, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
seekers %>% filter(origin = "Myanmar" , residence= "India")
seekers %>% filter(origin == "Myanmar" , residence== "India")
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" , residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter( residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
```{r  fig.height=12}
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter( residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter( residence=="India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 10, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggplot(data =seekers %>% filter(origin == "Myanmar" , residence== "India") , aes(x = year , y=maxcount) ) +
geom_line() + theme
ggplot(data =seekers %>% filter(origin == "Myanmar" , residence== "India") , aes(x = year , y=maxcount) ) +
geom_line(color = textcol) + theme
ggplot(data =seekers %>% filter(origin == "Myanmar" , residence== "India") , aes(x = year , y=maxcount) ) +
geom_line(color = linecol) + theme
lightlinecol <- "#c7f0db"
ggplot(data =seekers %>% filter(origin == "Myanmar" , residence== "India") , aes(x = year , y=maxcount) ) +
geom_line(color = lightlinecol) + theme
ggplot(data =seekers %>% filter(origin == "Myanmar" , residence== "India") , aes(x = year , y=maxcount , color=origin) ) +
geom_line(color = lightlinecol) + theme
ggplot(data =seekers %>% filter(origin == "Myanmar" , residence== "India") , aes(x = year , y=maxcount) ) +
geom_line(color = lightlinecol) + theme
(1812-15561)/1812
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
coiseekerstotals <- coiseekerstotals %>% filter(totals > 200000)
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan" | residence == "India"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
ggparallel::ggparallel(data =  coiseekerstotals %>% filter(origin != "Afghanistan"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 8, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
coiseekerstotals
ggplot(data = coiseekerstotals %>% filter(residence == "India")) +
geom_sf(aes(fill = totals)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
install.packages("sf")
ggplot(data = coiseekerstotals %>% filter(residence == "India")) +
geom_sf(aes(fill = totals)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
coiseekerstotals %>% filter(residence == "India")
seekers
seekers %>% filter(residence == "India") %>% group_by(residence ,year) %>% summarize(totals = sum(maxcount))
ggplot(data = yoyref , aes(x=year , y = totals)) + theme
yoyref <- seekers %>% filter(residence == "India") %>% group_by(residence ,year) %>% summarize(totals = sum(maxcount))
ggplot(data = yoyref , aes(x=year , y = totals)) + theme
yoyref
ggplot(data = yoyref , aes(x=year , y = totals)) + theme
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line() + theme
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) + theme
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) +
scale_x_continuous(labels = comma) +
theme
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) +
scale_x_continuous(labels = "comma") +
theme
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) +
scale_x_continuous(labels = scales::comma) +
theme
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) +
scale_x_continuous(labels = scales::comma) +
theme
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) +
theme +
scale_x_continuous(labels = scales::comma)
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) +
theme +
scale_y_continuous(labels = scales::comma)
yoyref <- forindia %>% group_by(residence ,year) %>% summarize(totals = sum(maxcount))
ggplot(data = yoyref , aes(x=year , y = totals)) + geom_line(color = lightlinecol) +
theme +
scale_y_continuous(labels = scales::comma)
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter( origin=="Myanmar"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 10, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 34) )+
theme  + theme(legend.position="none")
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter( origin=="Myanmar"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 10, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 57) )+
theme  + theme(legend.position="none")
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter( origin=="Myanmar"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 10, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 57) )+
theme  + theme(legend.position="none")
coi2 <- c("Pakistan" , "Bangladesh" , "Afghanistan" , "Sri Lanka" , "China", "Myanmar" , "Somalia")
coiseekers <- seekers %>% filter(origin %in% coi2)
coiseekerstotals <- coiseekers %>% group_by(origin , residence) %>% summarise(totals = sum(maxcount)) %>% as.data.frame()
ggparallel::ggparallel(data =  coiseekerstotals %>% filter( origin=="Myanmar"),
c("origin" , "residence") ,
method="parset",
weight="totals" , label.size = 12, text.angle=0 , text.offset = 0  ,label=TRUE) +
scale_color_manual(values=sample(color , 57) )+
theme  + theme(legend.position="none")
visa <- read.csv("./VISA_Details_2010-2013-oct.csv")
visa <- visa %>% clean_names()
visa <- visa %>% gather(key="type" , value="counts" ,-country , -mission , -visa_issue_date)
visa$visa_issue_date_d <- visa$visa_issue_date %>% strptime(format="%d-%m-%y") %>% as.Date()
visa$visa_issue_date_year <- visa$visa_issue_date_d %>% format("%Y")
visa$visa_issue_date_month <- visa$visa_issue_date_d %>% format("%m")
visa
color = grDevices::colors()[grep('(gr(a|e)y)|(red) ', grDevices::colors(), invert = T)]
visatype_color <- sample(color , length(visa$type %>% unique()))
ggplot(data= visa %>% group_by(type , visa_issue_date_year) %>% summarise(totals = sum(counts))
, aes(x = visa_issue_date_year , y = totals, fill = type)) +
geom_col() +
scale_fill_manual(values=visatype_color) +
theme +
theme(legend.position="bottom")
ggplot(data=  visa %>% group_by(country,type ) %>% summarise(totals = sum(counts)) ,
aes(x = country ,y=totals ,fill=type)) +
geom_col(position="fill" , stat="identity") +
theme + theme(legend.position = "bottom")
library(ggplot2)
library(tm)
library(dplyr)
library(tidyr)
library(ggwordcloud)
library(SentimentAnalysis)
library(syuzhet)
bgcolor <- "#1b2a49"
linecolor <- "#c9d1d3"
textcolor <- "#ffd369"
axiscolor <- "#4658810f"
titletextcolor <- "#6fb98f"
bgrect <- element_rect(fill=bgcolor)
axistext <- element_text(color=textcolor)
titletext <- element_text(color = titletextcolor)
mtheme <- ggplot2::theme(plot.background = bgrect,
panel.background = bgrect,
panel.grid.major = element_line(color=axiscolor),
panel.grid.minor =  element_line(color=axiscolor),
axis.text.x = axistext,
axis.text.y = axistext,
axis.title = titletext ,
legend.background = bgrect,
legend.text =  axistext,
legend.title = titletext
)
fileToCorpus <- function(filepath){
text <- readChar(filepath , file.info(filepath)$size)
Corpus(VectorSource(c(text)))
}
#Corpus(SimpleSource("./Data/Upanishads.txt" , length = 1,reader = readPlain(elem=, language = "en")))
uc <- fileToCorpus("./Data/Upanishads.txt")
bc <- fileToCorpus("./Data/bible.txt")
corpuses <- list(uc , bc)
labels <- c("Upanishad" , "Bible")
summary(uc)
corpusToTM <- function(corpus){
a <- tm_map(corpus, removeNumbers)
a <- tm_map(a, removePunctuation)
a <- tm_map(a , stripWhitespace)
a <- tm_map(a, tolower)
a <- tm_map(a, removeWords, stopwords("english")) # this stopword file is at C:\Users\[username]\Documents\R\win-library\2.13\tm\stopwords
#a <- tm_map(a, stemDocument, language = "english")
adtm <-DocumentTermMatrix(a)
adtm <- removeSparseTerms(adtm, 0.75)
adtm
}
ucdtm <- corpusToTM(uc)
bcdtm <- corpusToTM(bc)
getWordFreqs  <- function (dtm , num=50){
df <- findMostFreqTerms(dtm  , 50) %>% as.data.frame()
df$words <- rownames(df)
colnames(df) <- c("freq" , "word")
df
}
ufw <- getWordFreqs(ucdtm , 100)
bfw <- getWordFreqs(bcdtm , 100)
ufw
getWordCloud <- function(wordFreqDf){
p <- ggplot(data = wordFreqDf , aes(label= word ,
size = freq ,
color = freq)) +
geom_text_wordcloud(shape="square") +
scale_size_area(max_size = 10) +
scale_radius(range = c(0, 20), limits = c(0, NA))  +mtheme
print(p)
}
getWordCloud(ufw)
getWordCloud(bfw)
applyTo <- function(listoi , labels , func){
stms <-  list()
for(i in seq_along( listoi) ) {
# print(i )
stm <- func(listoi[[i]]) %>% as.data.frame()
stm$book <- labels[i]
stms[[i]] <- stm
}
stms
}
sentimentPlot <- function(dtms , labels){
stms <- applyTo(dtms , labels , SentimentAnalysis::analyzeSentiment)
nstm <- do.call(rbind , stms)
p <- ggplot(data = nstm %>% gather(key="sentiment" , value="score" , -WordCount , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
print(p)
}
#sentimentPlot()
#SentimentAnalysis::analyzeSentiment(dtms[[1]]) %>% as.data.frame()
dtms <- list(ucdtm , bcdtm)
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , indentity)) })
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments
applyTo <- function(listoi , labels , func){
stms <-  list()
for(i in seq_along( listoi) ) {
# print(i )
stm <- func(listoi[[i]]) %>% as.data.frame()
stm$book <- labels[i]
stms[[i]] <- stm
}
nstm <- do.call(rbind , stms)
nstm
}
sentimentPlot <- function(dtms , labels){
nstm <- applyTo(dtms , labels , SentimentAnalysis::analyzeSentiment)
p <- ggplot(data = nstm %>% gather(key="sentiment" , value="score" , -WordCount , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
print(p)
}
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments
ggplot(sentiments = nstm %>% gather(key="sentiment" , value="score" , -WordCount , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
ggplot(data = sentiments %>% gather(key="sentiment" , value="score" , -WordCount , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments
sentiments <- sentiments %>% scale()
sentiments %>% select(-book) <- sentiments %>% select(-book) %>% scale()
sentiments[-book]
sentiments[-"book"] <- sentiments %>% select(-book) %>% scale()
sentiments[[-"book"]] <- sentiments %>% select(-book) %>% scale()
sentiments[, names(sentiments) != "book"]]
sentiments[, names(sentiments) != "book"]
sentiments[, names(sentiments) != "book"] <- sentiments[, names(sentiments) != "book"] %>% scale()
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments
apply(sentiments[, names(sentiments) != "book"] ,1 ,rescale(to=c(0,1)))
apply(sentiments[, names(sentiments) != "book"] ,1 ,rescale,to=c(0,1))
apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(0,1))
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(0,1))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(0,1))
sentiments
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(0,1))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments
apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(0,1))
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(-1,1))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
scale_x_continuous(limits=c(0.8,2))
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
scale_x_continuous(limits=c(0.8,2)) +
coord_flip() + mtheme
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
scale_y_continuous(limits=c(0.8,2)) +
coord_flip() + mtheme
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
sentiments
sentiments %>% gather(key="sentiment" , value="score"  , -book)
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments %>% gather(key="sentiment" , value="score"  , -book)
sentiments <- applyTo(corpuses , labels , function(c){ syuzhet::get_nrc_sentiment(sapply(c , identity)) })
sentiments
library(ggparallel)
library(GGally)
ggparcoord(sentiments , columns = 1:(ncol(sentiments) - 1) , groupColumn = book)
ggparcoord(sentiments , columns = 1:(ncol(sentiments) - 1) , groupColumn = "book")
sentiments[, names(sentiments) != "book"] <- apply(sentiments[, names(sentiments) != "book"] ,1 ,scales::rescale,to=c(1,2))
ggplot(data = sentiments %>% gather(key="sentiment" , value="score"  , -book),
aes(x = sentiment , y =score,  fill=book)) +
geom_bar(stat = "identity" , position="dodge") +
coord_flip() + mtheme
library(ggplot2)
library(tm)
